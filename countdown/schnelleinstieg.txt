Smileinstaller Schnelleinstieg
Eine Konfigurationsdatei sieht eigentlich immer so aus
	<pages>
		<installer>
			<title></title>
			<nextstring></nextstring>
			<finishstring></finishstring>
			<finishedstring></finishedstring>
			<redirectTo></redirectTo>
			<finish>
				<action></action>
				<required></required>
				<errormessage></errormessage>
			</finish>
			...
		</installer>
		<page>
			<title></title>
			<name></name>
			<desc></desc>
			<variable>
				<name></name>
				<htmlname></htmlname>				
				<htmldesc></htmldesc>
				<required></required>
				<newline></newline>
				<formtype></formtype>
				<defaultvalue></defaultvalue>
				<check>
					<required></required>
					<action></action>
					<errormessage></errormessage>
				</check>
				...
			</variable>
			...
			<check>
				<required></required>
				<action></action>
				<errormessage></errormessage>
			</check>
		</page>
		...
	</pages>

"..." bedeutet dass der vorhergehende Tag noch mehrere Male vorkommen darf.

Schauen wir uns die Tags im Detail an.
	<pages>		// Der Tag indem sich der Installer befindet
		<installer>		// Grundeinstellungen des Installers
			<title></title>		// Titel der Installation
			<nextstring></nextstring>		// Text fuer die "Weiter"-Buttons
			<finishedstring></finishedstring>		// Text fuer die "Fertig"-Meldung
			<redirectTo></redirectTo>		// Url zu der am Schluss verwiesen werden soll
			<finish>	// Aktion nach allen Seiten und deren Variablen
				<action></action>		// Aktion *Siehe Extensions*
				<required></required>	// 1 = Darf nicht fehlschlagen, 0 = Kann fehlschlagen
				<errormessage></errormessage>		// Fehlermeldung bei Fehlschlag
			</finish>
			...		// Weitere Aktionen
		</installer>	// Grundeinstellungen beendet
		<page>		// Eine Seite aufbauen
			<title></title>		// Titel der Seite
			<name></name>		// Name der Seite
			<desc></desc>		// Beschreibung fuer die Seite
			<variable>		// Variable fuer diese Seite
				<name></name>		// Variablenname bei dem auf die PHP-Beschraenkungen fuer Variablen zu achten ist
				<htmlname></htmlname>		// Name im HTML-Formular
				<htmldesc></htmldesc>		// Beschreibung im HTML-Formular
				<required></required>		// 1 = Eingabe erforderlich, 0 = Eingabe nicht erforderlich
				<newline></newline>		// 1 = Nachfolgende Variable in neue Zeile, 0 = Nachfolgende Variable in gleiche Zeile
				<formtype></formtype>		// Formulartyp (box|html|input|password|text|select|checkbox)
				<defaultvalue></defaultvalue>		// Vorgabewert *Siehe Defaultvalues*
				<check>		// Aktion zur Pruefung dieser Variable
					<required></required>		// 1 = Darf nicht fehlschlagen, 0 = Darf fehlschlagen
					<action></action>		// Aktion *Siehe Extensions*
					<errormessage></errormessage>		// Fehlermeldung bei Fehlschlag
				</check>
				...		// Weitere Aktionen zur Pruefung dieser Variable
			</variable>
			...		// Weitere Variablen
			<check>		// Aktion zur Pruefung dieser Seite nach erfolgreicher Pruefung aller Variablen einschlieslich dieser Seitenvariablen
				<required></required>		// 1 = Darf nicht fehlschlagen, 0 = Darf fehlschlagen
				<action></action>		// Aktion *Siehe Extensions*
				<errormessage></errormessage>		// Fehlermeldung bei Fehlschlag
			</check>
			...		// Weitere Aktionen
		</page>
		...		// Weitere Seiten
	</pages>

Die Anzahl der Seiten ist soweit mir bekannt ist egal.
Es verlaengert sich natuerlich die Ausfuehrungsgeschwindigkeit je weiter man in den Seiten kommt.

*Extensions*
	Die Erweiterungen in Smileinstaller sind Methoden die in ./include/extensions/*.php zu finden sind
	Eine Methodendefinition in der Konfigurationsdatei sieht folgendermassen aus
	!methodenname:option,option,option
	Die Argumente $pagenum und $varnum in der Klasse Extensions werden vom Skript
	erstellt und duerfen nicht in die Konfigurationsdatei. Grund:
	Konfigurationsdatei
	!methodenname:option,option,option
	wird zu PHP-Code
	methodenname ( $pagenum, $varnum, "option","option","option" );
	
	Nicht-Standard-Methoden sollten in der dafuer vorgesehenen Datei
	./script/scriptdirname/index.php abgelegt werden. Die Aufrufe erfolgen auf die gleiche Weise.

*Defaultvalue*
	Der Vorgabewert einer Variable kann entweder
	ein WERT
	=Wert
	eine DATEI (muss unterhalb ./script/scriptdirname/externals/ liegen)
	.Dateiname
	oder ein METHODENAUFRUF
	!methode:option,option,option
	sein.
	Ist der Formulartyp ein "Waehl"-Typ, kann also einen von mehreren vordefinierte Werten besitzen,
	muss der Wert wie folgt geschrieben werden
	Am Beispiel von WERT:
	Formulartyp:	select
	Vorgabewert:	=0:[Yes],1:[No],2:[Maybe]		*Siehe Textklammern*
	Bei Wahl Yes ist Nutzwert 0
	Bei Wahl No ist Nutzwert 1
	Bei Wahl Maybe ist Nutzwert 2
	Man kann den Anzeigewert, also der Wert nach dem Zeichen : ebensogut als Nutzwert 
	nehmen indem man den Nutzwert und das Zeichen : nicht schreibt
	Beispiel:
	Vorgabewert:	=[Yes],[No],[Maybe]
	Bei Wahl Yes ist Nutzwert Yes
	Bei Wahl No ist Nutzwert No
	Bei Wahl Maybe ist Nutzwert Maybe
	
	Pruefungen auf Variablen werden auch mit Methodenaufrufen realisiert
	Die wichtigste Methode hierzu ist
	
	!_checkFormspecific
	bei select und checbox
	Prueft ob der Nutzwert einer der Vorgabewerte ist Yes, No oder Maybe (0, 1, 2)
	bei input, text
	Prueft ob der Nutzwert mehr als nichts ist
	
	ein anderer Aufruf ist
	!_checkFormspecific:Pruefwert
	Bsp.: !_checkFormspecific:[Yes]
	bei allen Formulartypen
	Ist der Nutzwert nicht PRUEFWERT ist die Pruefung falsch
	
*Textklammern*
	Die Klammern dienen dazu dem Sprachsystem zu zeigen welcher Text ersetzt werden muss sofern es
	Ersetzungstext gibt. Am Schluss wuerde hier bei der Sprachwahl englisch folgendes stehen
	Vorgabewert:	=0:Yes,1:No,2:Maybe
	Und wenn es fuer deutsch Ersetzungstext gibt und deutsch gewaehlt wurde
	Vorgabewert:	=0:Ja,1:Nein,2:Vielleicht

Es ist nur ein Schnelleinstieg. Ich hab bestimmt ganz viele wichtige Informationen vergessen ;)
